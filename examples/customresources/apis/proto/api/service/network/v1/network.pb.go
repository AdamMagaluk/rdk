// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        (unknown)
// source: api/service/network/v1/network.proto

package v1

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Interface_Type int32

const (
	Interface_TYPE_UNSPECIFIED Interface_Type = 0
	Interface_TYPE_ETHERNET    Interface_Type = 1
	Interface_TYPE_WIFI        Interface_Type = 2
)

// Enum value maps for Interface_Type.
var (
	Interface_Type_name = map[int32]string{
		0: "TYPE_UNSPECIFIED",
		1: "TYPE_ETHERNET",
		2: "TYPE_WIFI",
	}
	Interface_Type_value = map[string]int32{
		"TYPE_UNSPECIFIED": 0,
		"TYPE_ETHERNET":    1,
		"TYPE_WIFI":        2,
	}
)

func (x Interface_Type) Enum() *Interface_Type {
	p := new(Interface_Type)
	*p = x
	return p
}

func (x Interface_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Interface_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_api_service_network_v1_network_proto_enumTypes[0].Descriptor()
}

func (Interface_Type) Type() protoreflect.EnumType {
	return &file_api_service_network_v1_network_proto_enumTypes[0]
}

func (x Interface_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Interface_Type.Descriptor instead.
func (Interface_Type) EnumDescriptor() ([]byte, []int) {
	return file_api_service_network_v1_network_proto_rawDescGZIP(), []int{0, 0}
}

type Interface_Flag int32

const (
	Interface_FLAG_UNSPECIFIED Interface_Flag = 0
	// interface is up
	Interface_FLAG_UP Interface_Flag = 1
	// interface supports broadcast access capability
	Interface_FLAG_BROADCAST Interface_Flag = 2
	// interface is a loopback interface
	Interface_FLAG_LOOPBACK Interface_Flag = 3
	// interface belongs to a point-to-point link
	Interface_FLAG_POINT_TO_POINT Interface_Flag = 4
	// interface supports multicast access capability
	Interface_FLAG_MULTICAST Interface_Flag = 5
)

// Enum value maps for Interface_Flag.
var (
	Interface_Flag_name = map[int32]string{
		0: "FLAG_UNSPECIFIED",
		1: "FLAG_UP",
		2: "FLAG_BROADCAST",
		3: "FLAG_LOOPBACK",
		4: "FLAG_POINT_TO_POINT",
		5: "FLAG_MULTICAST",
	}
	Interface_Flag_value = map[string]int32{
		"FLAG_UNSPECIFIED":    0,
		"FLAG_UP":             1,
		"FLAG_BROADCAST":      2,
		"FLAG_LOOPBACK":       3,
		"FLAG_POINT_TO_POINT": 4,
		"FLAG_MULTICAST":      5,
	}
)

func (x Interface_Flag) Enum() *Interface_Flag {
	p := new(Interface_Flag)
	*p = x
	return p
}

func (x Interface_Flag) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Interface_Flag) Descriptor() protoreflect.EnumDescriptor {
	return file_api_service_network_v1_network_proto_enumTypes[1].Descriptor()
}

func (Interface_Flag) Type() protoreflect.EnumType {
	return &file_api_service_network_v1_network_proto_enumTypes[1]
}

func (x Interface_Flag) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Interface_Flag.Descriptor instead.
func (Interface_Flag) EnumDescriptor() ([]byte, []int) {
	return file_api_service_network_v1_network_proto_rawDescGZIP(), []int{0, 1}
}

type Interface struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name            string               `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Type            Interface_Type       `protobuf:"varint,2,opt,name=type,proto3,enum=acme.service.network.v1.Interface_Type" json:"type,omitempty"`
	Mtu             int64                `protobuf:"varint,3,opt,name=mtu,proto3" json:"mtu,omitempty"`
	HardwareAddress string               `protobuf:"bytes,4,opt,name=hardware_address,json=hardwareAddress,proto3" json:"hardware_address,omitempty"`
	Flags           []Interface_Flag     `protobuf:"varint,5,rep,packed,name=flags,proto3,enum=acme.service.network.v1.Interface_Flag" json:"flags,omitempty"`
	Addresses       []*Interface_Address `protobuf:"bytes,6,rep,name=addresses,proto3" json:"addresses,omitempty"`
}

func (x *Interface) Reset() {
	*x = Interface{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_service_network_v1_network_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Interface) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Interface) ProtoMessage() {}

func (x *Interface) ProtoReflect() protoreflect.Message {
	mi := &file_api_service_network_v1_network_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Interface.ProtoReflect.Descriptor instead.
func (*Interface) Descriptor() ([]byte, []int) {
	return file_api_service_network_v1_network_proto_rawDescGZIP(), []int{0}
}

func (x *Interface) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Interface) GetType() Interface_Type {
	if x != nil {
		return x.Type
	}
	return Interface_TYPE_UNSPECIFIED
}

func (x *Interface) GetMtu() int64 {
	if x != nil {
		return x.Mtu
	}
	return 0
}

func (x *Interface) GetHardwareAddress() string {
	if x != nil {
		return x.HardwareAddress
	}
	return ""
}

func (x *Interface) GetFlags() []Interface_Flag {
	if x != nil {
		return x.Flags
	}
	return nil
}

func (x *Interface) GetAddresses() []*Interface_Address {
	if x != nil {
		return x.Addresses
	}
	return nil
}

type WifiNetwork struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Known     bool     `protobuf:"varint,2,opt,name=known,proto3" json:"known,omitempty"`
	Ssid      string   `protobuf:"bytes,4,opt,name=ssid,proto3" json:"ssid,omitempty"`
	Bssid     string   `protobuf:"bytes,5,opt,name=bssid,proto3" json:"bssid,omitempty"`
	Essid     string   `protobuf:"bytes,6,opt,name=essid,proto3" json:"essid,omitempty"`
	Rssi      int64    `protobuf:"varint,7,opt,name=rssi,proto3" json:"rssi,omitempty"`
	Signal    int64    `protobuf:"varint,8,opt,name=signal,proto3" json:"signal,omitempty"`
	Frequency int64    `protobuf:"varint,9,opt,name=frequency,proto3" json:"frequency,omitempty"`
	Flags     []string `protobuf:"bytes,10,rep,name=flags,proto3" json:"flags,omitempty"`
}

func (x *WifiNetwork) Reset() {
	*x = WifiNetwork{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_service_network_v1_network_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WifiNetwork) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WifiNetwork) ProtoMessage() {}

func (x *WifiNetwork) ProtoReflect() protoreflect.Message {
	mi := &file_api_service_network_v1_network_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WifiNetwork.ProtoReflect.Descriptor instead.
func (*WifiNetwork) Descriptor() ([]byte, []int) {
	return file_api_service_network_v1_network_proto_rawDescGZIP(), []int{1}
}

func (x *WifiNetwork) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *WifiNetwork) GetKnown() bool {
	if x != nil {
		return x.Known
	}
	return false
}

func (x *WifiNetwork) GetSsid() string {
	if x != nil {
		return x.Ssid
	}
	return ""
}

func (x *WifiNetwork) GetBssid() string {
	if x != nil {
		return x.Bssid
	}
	return ""
}

func (x *WifiNetwork) GetEssid() string {
	if x != nil {
		return x.Essid
	}
	return ""
}

func (x *WifiNetwork) GetRssi() int64 {
	if x != nil {
		return x.Rssi
	}
	return 0
}

func (x *WifiNetwork) GetSignal() int64 {
	if x != nil {
		return x.Signal
	}
	return 0
}

func (x *WifiNetwork) GetFrequency() int64 {
	if x != nil {
		return x.Frequency
	}
	return 0
}

func (x *WifiNetwork) GetFlags() []string {
	if x != nil {
		return x.Flags
	}
	return nil
}

type GetInterfaceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// service name in viam
	Name          string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	InterfaceName string `protobuf:"bytes,2,opt,name=interface_name,json=interfaceName,proto3" json:"interface_name,omitempty"`
}

func (x *GetInterfaceRequest) Reset() {
	*x = GetInterfaceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_service_network_v1_network_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetInterfaceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetInterfaceRequest) ProtoMessage() {}

func (x *GetInterfaceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_service_network_v1_network_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetInterfaceRequest.ProtoReflect.Descriptor instead.
func (*GetInterfaceRequest) Descriptor() ([]byte, []int) {
	return file_api_service_network_v1_network_proto_rawDescGZIP(), []int{2}
}

func (x *GetInterfaceRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetInterfaceRequest) GetInterfaceName() string {
	if x != nil {
		return x.InterfaceName
	}
	return ""
}

type ListInterfacesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// service name in viam
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *ListInterfacesRequest) Reset() {
	*x = ListInterfacesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_service_network_v1_network_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListInterfacesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListInterfacesRequest) ProtoMessage() {}

func (x *ListInterfacesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_service_network_v1_network_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListInterfacesRequest.ProtoReflect.Descriptor instead.
func (*ListInterfacesRequest) Descriptor() ([]byte, []int) {
	return file_api_service_network_v1_network_proto_rawDescGZIP(), []int{3}
}

func (x *ListInterfacesRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type ListInterfacesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Interfaces []*Interface `protobuf:"bytes,1,rep,name=interfaces,proto3" json:"interfaces,omitempty"`
}

func (x *ListInterfacesResponse) Reset() {
	*x = ListInterfacesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_service_network_v1_network_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListInterfacesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListInterfacesResponse) ProtoMessage() {}

func (x *ListInterfacesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_service_network_v1_network_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListInterfacesResponse.ProtoReflect.Descriptor instead.
func (*ListInterfacesResponse) Descriptor() ([]byte, []int) {
	return file_api_service_network_v1_network_proto_rawDescGZIP(), []int{4}
}

func (x *ListInterfacesResponse) GetInterfaces() []*Interface {
	if x != nil {
		return x.Interfaces
	}
	return nil
}

type WifiConnectRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// service name in viam
	Name           string               `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	InterfaceName  string               `protobuf:"bytes,2,opt,name=interface_name,json=interfaceName,proto3" json:"interface_name,omitempty"`
	ConnectTimeout *durationpb.Duration `protobuf:"bytes,3,opt,name=connect_timeout,json=connectTimeout,proto3" json:"connect_timeout,omitempty"`
	Ssid           string               `protobuf:"bytes,4,opt,name=ssid,proto3" json:"ssid,omitempty"`
	Psk            *string              `protobuf:"bytes,5,opt,name=psk,proto3,oneof" json:"psk,omitempty"`
}

func (x *WifiConnectRequest) Reset() {
	*x = WifiConnectRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_service_network_v1_network_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WifiConnectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WifiConnectRequest) ProtoMessage() {}

func (x *WifiConnectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_service_network_v1_network_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WifiConnectRequest.ProtoReflect.Descriptor instead.
func (*WifiConnectRequest) Descriptor() ([]byte, []int) {
	return file_api_service_network_v1_network_proto_rawDescGZIP(), []int{5}
}

func (x *WifiConnectRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *WifiConnectRequest) GetInterfaceName() string {
	if x != nil {
		return x.InterfaceName
	}
	return ""
}

func (x *WifiConnectRequest) GetConnectTimeout() *durationpb.Duration {
	if x != nil {
		return x.ConnectTimeout
	}
	return nil
}

func (x *WifiConnectRequest) GetSsid() string {
	if x != nil {
		return x.Ssid
	}
	return ""
}

func (x *WifiConnectRequest) GetPsk() string {
	if x != nil && x.Psk != nil {
		return *x.Psk
	}
	return ""
}

type WifiConnectResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConfirmationToken    string                 `protobuf:"bytes,1,opt,name=confirmation_token,json=confirmationToken,proto3" json:"confirmation_token,omitempty"`
	ConfirmationDelay    *durationpb.Duration   `protobuf:"bytes,2,opt,name=confirmation_delay,json=confirmationDelay,proto3" json:"confirmation_delay,omitempty"`
	ConfirmationDeadline *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=confirmation_deadline,json=confirmationDeadline,proto3" json:"confirmation_deadline,omitempty"`
}

func (x *WifiConnectResponse) Reset() {
	*x = WifiConnectResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_service_network_v1_network_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WifiConnectResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WifiConnectResponse) ProtoMessage() {}

func (x *WifiConnectResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_service_network_v1_network_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WifiConnectResponse.ProtoReflect.Descriptor instead.
func (*WifiConnectResponse) Descriptor() ([]byte, []int) {
	return file_api_service_network_v1_network_proto_rawDescGZIP(), []int{6}
}

func (x *WifiConnectResponse) GetConfirmationToken() string {
	if x != nil {
		return x.ConfirmationToken
	}
	return ""
}

func (x *WifiConnectResponse) GetConfirmationDelay() *durationpb.Duration {
	if x != nil {
		return x.ConfirmationDelay
	}
	return nil
}

func (x *WifiConnectResponse) GetConfirmationDeadline() *timestamppb.Timestamp {
	if x != nil {
		return x.ConfirmationDeadline
	}
	return nil
}

type WifiConnectConfirmRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// service name in viam
	Name              string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	ConfirmationToken string `protobuf:"bytes,2,opt,name=confirmation_token,json=confirmationToken,proto3" json:"confirmation_token,omitempty"`
}

func (x *WifiConnectConfirmRequest) Reset() {
	*x = WifiConnectConfirmRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_service_network_v1_network_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WifiConnectConfirmRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WifiConnectConfirmRequest) ProtoMessage() {}

func (x *WifiConnectConfirmRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_service_network_v1_network_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WifiConnectConfirmRequest.ProtoReflect.Descriptor instead.
func (*WifiConnectConfirmRequest) Descriptor() ([]byte, []int) {
	return file_api_service_network_v1_network_proto_rawDescGZIP(), []int{7}
}

func (x *WifiConnectConfirmRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *WifiConnectConfirmRequest) GetConfirmationToken() string {
	if x != nil {
		return x.ConfirmationToken
	}
	return ""
}

type WifiConnectConfirmResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *WifiConnectConfirmResponse) Reset() {
	*x = WifiConnectConfirmResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_service_network_v1_network_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WifiConnectConfirmResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WifiConnectConfirmResponse) ProtoMessage() {}

func (x *WifiConnectConfirmResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_service_network_v1_network_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WifiConnectConfirmResponse.ProtoReflect.Descriptor instead.
func (*WifiConnectConfirmResponse) Descriptor() ([]byte, []int) {
	return file_api_service_network_v1_network_proto_rawDescGZIP(), []int{8}
}

type WifiScanRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// service name in viam
	Name          string               `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	InterfaceName string               `protobuf:"bytes,2,opt,name=interface_name,json=interfaceName,proto3" json:"interface_name,omitempty"`
	Duration      *durationpb.Duration `protobuf:"bytes,3,opt,name=duration,proto3" json:"duration,omitempty"`
}

func (x *WifiScanRequest) Reset() {
	*x = WifiScanRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_service_network_v1_network_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WifiScanRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WifiScanRequest) ProtoMessage() {}

func (x *WifiScanRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_service_network_v1_network_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WifiScanRequest.ProtoReflect.Descriptor instead.
func (*WifiScanRequest) Descriptor() ([]byte, []int) {
	return file_api_service_network_v1_network_proto_rawDescGZIP(), []int{9}
}

func (x *WifiScanRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *WifiScanRequest) GetInterfaceName() string {
	if x != nil {
		return x.InterfaceName
	}
	return ""
}

func (x *WifiScanRequest) GetDuration() *durationpb.Duration {
	if x != nil {
		return x.Duration
	}
	return nil
}

type WifiScanResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Networks []*WifiNetwork `protobuf:"bytes,1,rep,name=networks,proto3" json:"networks,omitempty"`
}

func (x *WifiScanResponse) Reset() {
	*x = WifiScanResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_service_network_v1_network_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WifiScanResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WifiScanResponse) ProtoMessage() {}

func (x *WifiScanResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_service_network_v1_network_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WifiScanResponse.ProtoReflect.Descriptor instead.
func (*WifiScanResponse) Descriptor() ([]byte, []int) {
	return file_api_service_network_v1_network_proto_rawDescGZIP(), []int{10}
}

func (x *WifiScanResponse) GetNetworks() []*WifiNetwork {
	if x != nil {
		return x.Networks
	}
	return nil
}

type Interface_Address struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// name of the network (for example, "tcp", "udp")
	Network string `protobuf:"bytes,1,opt,name=network,proto3" json:"network,omitempty"`
	// string form of address (for example, "192.0.2.1:25", "[2001:db8::1]:80")
	Address string `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
}

func (x *Interface_Address) Reset() {
	*x = Interface_Address{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_service_network_v1_network_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Interface_Address) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Interface_Address) ProtoMessage() {}

func (x *Interface_Address) ProtoReflect() protoreflect.Message {
	mi := &file_api_service_network_v1_network_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Interface_Address.ProtoReflect.Descriptor instead.
func (*Interface_Address) Descriptor() ([]byte, []int) {
	return file_api_service_network_v1_network_proto_rawDescGZIP(), []int{0, 0}
}

func (x *Interface_Address) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

func (x *Interface_Address) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

var File_api_service_network_v1_network_proto protoreflect.FileDescriptor

var file_api_service_network_v1_network_proto_rawDesc = []byte{
	0x0a, 0x24, 0x61, 0x70, 0x69, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x6e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2f, 0x76, 0x31, 0x2f, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x17, 0x61, 0x63, 0x6d, 0x65, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x76, 0x31, 0x1a,
	0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xa0,
	0x04, 0x0a, 0x09, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x3b, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x27,
	0x2e, 0x61, 0x63, 0x6d, 0x65, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x6e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61,
	0x63, 0x65, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a,
	0x03, 0x6d, 0x74, 0x75, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6d, 0x74, 0x75, 0x12,
	0x29, 0x0a, 0x10, 0x68, 0x61, 0x72, 0x64, 0x77, 0x61, 0x72, 0x65, 0x5f, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x68, 0x61, 0x72, 0x64, 0x77,
	0x61, 0x72, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x3d, 0x0a, 0x05, 0x66, 0x6c,
	0x61, 0x67, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x27, 0x2e, 0x61, 0x63, 0x6d, 0x65,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b,
	0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x2e, 0x46, 0x6c,
	0x61, 0x67, 0x52, 0x05, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x12, 0x48, 0x0a, 0x09, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x61,
	0x63, 0x6d, 0x65, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x6e, 0x65, 0x74, 0x77,
	0x6f, 0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65,
	0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x09, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x65, 0x73, 0x1a, 0x3d, 0x0a, 0x07, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x18,
	0x0a, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x22, 0x3e, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x10, 0x54, 0x59,
	0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00,
	0x12, 0x11, 0x0a, 0x0d, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x45, 0x54, 0x48, 0x45, 0x52, 0x4e, 0x45,
	0x54, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x57, 0x49, 0x46, 0x49,
	0x10, 0x02, 0x22, 0x7d, 0x0a, 0x04, 0x46, 0x6c, 0x61, 0x67, 0x12, 0x14, 0x0a, 0x10, 0x46, 0x4c,
	0x41, 0x47, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00,
	0x12, 0x0b, 0x0a, 0x07, 0x46, 0x4c, 0x41, 0x47, 0x5f, 0x55, 0x50, 0x10, 0x01, 0x12, 0x12, 0x0a,
	0x0e, 0x46, 0x4c, 0x41, 0x47, 0x5f, 0x42, 0x52, 0x4f, 0x41, 0x44, 0x43, 0x41, 0x53, 0x54, 0x10,
	0x02, 0x12, 0x11, 0x0a, 0x0d, 0x46, 0x4c, 0x41, 0x47, 0x5f, 0x4c, 0x4f, 0x4f, 0x50, 0x42, 0x41,
	0x43, 0x4b, 0x10, 0x03, 0x12, 0x17, 0x0a, 0x13, 0x46, 0x4c, 0x41, 0x47, 0x5f, 0x50, 0x4f, 0x49,
	0x4e, 0x54, 0x5f, 0x54, 0x4f, 0x5f, 0x50, 0x4f, 0x49, 0x4e, 0x54, 0x10, 0x04, 0x12, 0x12, 0x0a,
	0x0e, 0x46, 0x4c, 0x41, 0x47, 0x5f, 0x4d, 0x55, 0x4c, 0x54, 0x49, 0x43, 0x41, 0x53, 0x54, 0x10,
	0x05, 0x22, 0xd3, 0x01, 0x0a, 0x0b, 0x57, 0x69, 0x66, 0x69, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72,
	0x6b, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x14, 0x0a, 0x05, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x05, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x73, 0x69, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x73, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x62,
	0x73, 0x73, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x62, 0x73, 0x73, 0x69,
	0x64, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x73, 0x73, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x65, 0x73, 0x73, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x73, 0x73, 0x69, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x72, 0x73, 0x73, 0x69, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x69, 0x67, 0x6e, 0x61, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x69, 0x67,
	0x6e, 0x61, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x72, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x79,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x66, 0x72, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63,
	0x79, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x05, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x22, 0x50, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x49, 0x6e,
	0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x66, 0x61, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x2b, 0x0a, 0x15, 0x4c, 0x69, 0x73,
	0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x5c, 0x0a, 0x16, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e,
	0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x42, 0x0a, 0x0a, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x61, 0x63, 0x6d, 0x65, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x49,
	0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x52, 0x0a, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66,
	0x61, 0x63, 0x65, 0x73, 0x22, 0xc6, 0x01, 0x0a, 0x12, 0x57, 0x69, 0x66, 0x69, 0x43, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x25, 0x0a, 0x0e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61,
	0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x42, 0x0a, 0x0f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0e, 0x63, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x73,
	0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x73, 0x69, 0x64, 0x12, 0x15,
	0x0a, 0x03, 0x70, 0x73, 0x6b, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x03, 0x70,
	0x73, 0x6b, 0x88, 0x01, 0x01, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x70, 0x73, 0x6b, 0x22, 0xdf, 0x01,
	0x0a, 0x13, 0x57, 0x69, 0x66, 0x69, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2d, 0x0a, 0x12, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x11, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x48, 0x0a, 0x12, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x65, 0x6c, 0x61, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x11, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x6c, 0x61, 0x79, 0x12, 0x4f,
	0x0a, 0x15, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64,
	0x65, 0x61, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x14, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x61, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x22,
	0x5e, 0x0a, 0x19, 0x57, 0x69, 0x66, 0x69, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x72, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x2d, 0x0a, 0x12, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22,
	0x1c, 0x0a, 0x1a, 0x57, 0x69, 0x66, 0x69, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x72, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x83, 0x01,
	0x0a, 0x0f, 0x57, 0x69, 0x66, 0x69, 0x53, 0x63, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61,
	0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x35, 0x0a, 0x08,
	0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x22, 0x54, 0x0a, 0x10, 0x57, 0x69, 0x66, 0x69, 0x53, 0x63, 0x61, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x08, 0x6e, 0x65, 0x74, 0x77, 0x6f,
	0x72, 0x6b, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x61, 0x63, 0x6d, 0x65,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b,
	0x2e, 0x76, 0x31, 0x2e, 0x57, 0x69, 0x66, 0x69, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x52,
	0x08, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x32, 0xde, 0x06, 0x0a, 0x0e, 0x4e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0xa8, 0x01, 0x0a,
	0x0c, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x12, 0x2c, 0x2e,
	0x61, 0x63, 0x6d, 0x65, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x6e, 0x65, 0x74,
	0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72,
	0x66, 0x61, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x61, 0x63,
	0x6d, 0x65, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f,
	0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x22,
	0x46, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x40, 0x12, 0x3e, 0x2f, 0x61, 0x63, 0x6d, 0x65, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x6e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x7d, 0x2f, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x2f, 0x7b, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63,
	0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x7d, 0x12, 0xa8, 0x01, 0x0a, 0x0e, 0x4c, 0x69, 0x73, 0x74,
	0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x73, 0x12, 0x2e, 0x2e, 0x61, 0x63, 0x6d,
	0x65, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72,
	0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61,
	0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x61, 0x63, 0x6d,
	0x65, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72,
	0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61,
	0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x35, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x2f, 0x12, 0x2d, 0x2f, 0x61, 0x63, 0x6d, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76,
	0x31, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72,
	0x6b, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x7d, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61,
	0x63, 0x65, 0x12, 0xa2, 0x01, 0x0a, 0x0b, 0x57, 0x69, 0x66, 0x69, 0x43, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x12, 0x2b, 0x2e, 0x61, 0x63, 0x6d, 0x65, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x69, 0x66,
	0x69, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x2c, 0x2e, 0x61, 0x63, 0x6d, 0x65, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x6e,
	0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x69, 0x66, 0x69, 0x43, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x38, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x32, 0x12, 0x30, 0x2f, 0x61, 0x63, 0x6d, 0x65, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x76, 0x31, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x6e, 0x65, 0x74, 0x77,
	0x6f, 0x72, 0x6b, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x7d, 0x2f, 0x77, 0x69, 0x66, 0x69, 0x2f,
	0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x12, 0xb7, 0x01, 0x0a, 0x12, 0x57, 0x69, 0x66, 0x69,
	0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x12, 0x32,
	0x2e, 0x61, 0x63, 0x6d, 0x65, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x6e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x69, 0x66, 0x69, 0x43, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x33, 0x2e, 0x61, 0x63, 0x6d, 0x65, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x69, 0x66,
	0x69, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x38, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x32, 0x12,
	0x30, 0x2f, 0x61, 0x63, 0x6d, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2f, 0x7b, 0x6e,
	0x61, 0x6d, 0x65, 0x7d, 0x2f, 0x77, 0x69, 0x66, 0x69, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72,
	0x6d, 0x12, 0x96, 0x01, 0x0a, 0x08, 0x57, 0x69, 0x66, 0x69, 0x53, 0x63, 0x61, 0x6e, 0x12, 0x28,
	0x2e, 0x61, 0x63, 0x6d, 0x65, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x6e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x69, 0x66, 0x69, 0x53, 0x63, 0x61,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x61, 0x63, 0x6d, 0x65, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e,
	0x76, 0x31, 0x2e, 0x57, 0x69, 0x66, 0x69, 0x53, 0x63, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x35, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2f, 0x12, 0x2d, 0x2f, 0x61, 0x63,
	0x6d, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2f, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x7d,
	0x2f, 0x77, 0x69, 0x66, 0x69, 0x2f, 0x73, 0x63, 0x61, 0x6e, 0x42, 0x2a, 0x5a, 0x28, 0x67, 0x6f,
	0x2e, 0x61, 0x63, 0x6d, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x6e, 0x65, 0x74, 0x77,
	0x6f, 0x72, 0x6b, 0x2f, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_service_network_v1_network_proto_rawDescOnce sync.Once
	file_api_service_network_v1_network_proto_rawDescData = file_api_service_network_v1_network_proto_rawDesc
)

func file_api_service_network_v1_network_proto_rawDescGZIP() []byte {
	file_api_service_network_v1_network_proto_rawDescOnce.Do(func() {
		file_api_service_network_v1_network_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_service_network_v1_network_proto_rawDescData)
	})
	return file_api_service_network_v1_network_proto_rawDescData
}

var file_api_service_network_v1_network_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_api_service_network_v1_network_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_api_service_network_v1_network_proto_goTypes = []interface{}{
	(Interface_Type)(0),                // 0: acme.service.network.v1.Interface.Type
	(Interface_Flag)(0),                // 1: acme.service.network.v1.Interface.Flag
	(*Interface)(nil),                  // 2: acme.service.network.v1.Interface
	(*WifiNetwork)(nil),                // 3: acme.service.network.v1.WifiNetwork
	(*GetInterfaceRequest)(nil),        // 4: acme.service.network.v1.GetInterfaceRequest
	(*ListInterfacesRequest)(nil),      // 5: acme.service.network.v1.ListInterfacesRequest
	(*ListInterfacesResponse)(nil),     // 6: acme.service.network.v1.ListInterfacesResponse
	(*WifiConnectRequest)(nil),         // 7: acme.service.network.v1.WifiConnectRequest
	(*WifiConnectResponse)(nil),        // 8: acme.service.network.v1.WifiConnectResponse
	(*WifiConnectConfirmRequest)(nil),  // 9: acme.service.network.v1.WifiConnectConfirmRequest
	(*WifiConnectConfirmResponse)(nil), // 10: acme.service.network.v1.WifiConnectConfirmResponse
	(*WifiScanRequest)(nil),            // 11: acme.service.network.v1.WifiScanRequest
	(*WifiScanResponse)(nil),           // 12: acme.service.network.v1.WifiScanResponse
	(*Interface_Address)(nil),          // 13: acme.service.network.v1.Interface.Address
	(*durationpb.Duration)(nil),        // 14: google.protobuf.Duration
	(*timestamppb.Timestamp)(nil),      // 15: google.protobuf.Timestamp
}
var file_api_service_network_v1_network_proto_depIdxs = []int32{
	0,  // 0: acme.service.network.v1.Interface.type:type_name -> acme.service.network.v1.Interface.Type
	1,  // 1: acme.service.network.v1.Interface.flags:type_name -> acme.service.network.v1.Interface.Flag
	13, // 2: acme.service.network.v1.Interface.addresses:type_name -> acme.service.network.v1.Interface.Address
	2,  // 3: acme.service.network.v1.ListInterfacesResponse.interfaces:type_name -> acme.service.network.v1.Interface
	14, // 4: acme.service.network.v1.WifiConnectRequest.connect_timeout:type_name -> google.protobuf.Duration
	14, // 5: acme.service.network.v1.WifiConnectResponse.confirmation_delay:type_name -> google.protobuf.Duration
	15, // 6: acme.service.network.v1.WifiConnectResponse.confirmation_deadline:type_name -> google.protobuf.Timestamp
	14, // 7: acme.service.network.v1.WifiScanRequest.duration:type_name -> google.protobuf.Duration
	3,  // 8: acme.service.network.v1.WifiScanResponse.networks:type_name -> acme.service.network.v1.WifiNetwork
	4,  // 9: acme.service.network.v1.NetworkService.GetInterface:input_type -> acme.service.network.v1.GetInterfaceRequest
	5,  // 10: acme.service.network.v1.NetworkService.ListInterfaces:input_type -> acme.service.network.v1.ListInterfacesRequest
	7,  // 11: acme.service.network.v1.NetworkService.WifiConnect:input_type -> acme.service.network.v1.WifiConnectRequest
	9,  // 12: acme.service.network.v1.NetworkService.WifiConnectConfirm:input_type -> acme.service.network.v1.WifiConnectConfirmRequest
	11, // 13: acme.service.network.v1.NetworkService.WifiScan:input_type -> acme.service.network.v1.WifiScanRequest
	2,  // 14: acme.service.network.v1.NetworkService.GetInterface:output_type -> acme.service.network.v1.Interface
	6,  // 15: acme.service.network.v1.NetworkService.ListInterfaces:output_type -> acme.service.network.v1.ListInterfacesResponse
	8,  // 16: acme.service.network.v1.NetworkService.WifiConnect:output_type -> acme.service.network.v1.WifiConnectResponse
	10, // 17: acme.service.network.v1.NetworkService.WifiConnectConfirm:output_type -> acme.service.network.v1.WifiConnectConfirmResponse
	12, // 18: acme.service.network.v1.NetworkService.WifiScan:output_type -> acme.service.network.v1.WifiScanResponse
	14, // [14:19] is the sub-list for method output_type
	9,  // [9:14] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_api_service_network_v1_network_proto_init() }
func file_api_service_network_v1_network_proto_init() {
	if File_api_service_network_v1_network_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_service_network_v1_network_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Interface); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_service_network_v1_network_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WifiNetwork); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_service_network_v1_network_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetInterfaceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_service_network_v1_network_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListInterfacesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_service_network_v1_network_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListInterfacesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_service_network_v1_network_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WifiConnectRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_service_network_v1_network_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WifiConnectResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_service_network_v1_network_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WifiConnectConfirmRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_service_network_v1_network_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WifiConnectConfirmResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_service_network_v1_network_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WifiScanRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_service_network_v1_network_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WifiScanResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_service_network_v1_network_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Interface_Address); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_api_service_network_v1_network_proto_msgTypes[5].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_service_network_v1_network_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_service_network_v1_network_proto_goTypes,
		DependencyIndexes: file_api_service_network_v1_network_proto_depIdxs,
		EnumInfos:         file_api_service_network_v1_network_proto_enumTypes,
		MessageInfos:      file_api_service_network_v1_network_proto_msgTypes,
	}.Build()
	File_api_service_network_v1_network_proto = out.File
	file_api_service_network_v1_network_proto_rawDesc = nil
	file_api_service_network_v1_network_proto_goTypes = nil
	file_api_service_network_v1_network_proto_depIdxs = nil
}
